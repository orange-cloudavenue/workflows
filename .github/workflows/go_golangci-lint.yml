name: "GolangCI Lint"

on:
  workflow_call:
    inputs:
      ref:
        description: 'Git reference to checkout (eg: {{github.ref}})'
        required: true
        type: string
      repository:
        description: 'Repository to checkout (eg: {{github.repository}})'
        required: true
        type: string

permissions:
  contents: read

jobs:
  check-lint-requirements:
    runs-on: arc-runners
    name: "Check Lint Requirements"
    outputs:
      need-lint: ${{ steps.filter.outputs.go }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          repository: ${{ inputs.repository }}
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            go:
              - '**/*.go'

  golangci-lint:
    if: ${{ needs.check-lint-requirements.outputs.need-lint == 'true' }}
    needs: check-lint-requirements
    runs-on: arc-runners
    timeout-minutes: 10
    name: "GolangCI Lint"
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          repository: ${{ inputs.repository }}
      - name: Check if go.work exists
        id: check-go-work
        shell: bash
        run: |
          if [ -f "go.work" ]; then
            echo "go_version_file=go.work" >> $GITHUB_ENV
          else
            echo "go_version_file=go.mod" >> $GITHUB_ENV
          fi
      - uses: actions/setup-go@v5
        with:
           # Dynamically set the Go version file
          go-version-file: ${{ env.go_version_file }}
      - name: Install dependencies
        shell: bash 
        run: go mod download
      - name: Run linters
        uses: golangci/golangci-lint-action@v8
        with:
          args: --timeout=10m 
          version: latest